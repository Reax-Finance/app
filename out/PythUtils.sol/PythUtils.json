{"abi":[{"type":"function","name":"convertToUint","inputs":[{"name":"price","type":"int64","internalType":"int64"},{"name":"expo","type":"int32","internalType":"int32"},{"name":"targetDecimals","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"}],"bytecode":{"object":"0x610319610034600b8282823980515f1a607314602857634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610610034575f3560e01c8063b55522b214610038575b5f80fd5b61004b61004636600461010b565b61005d565b60405190815260200160405180910390f35b5f808460070b128061007157505f8360030b135b80610080575060fe198360030b125b15610089575f80fd5b5f610095845f19610177565b90508060ff168360ff16106100d8576100ae818461019d565b6100bc9060ff16600a61029c565b6100d09067ffffffffffffffff87166102ad565b915050610104565b6100e2838261019d565b6100f09060ff16600a61029c565b6100d09067ffffffffffffffff87166102c4565b9392505050565b5f805f6060848603121561011d575f80fd5b83358060070b811461012d575f80fd5b92506020840135600381900b8114610143575f80fd5b9150604084013560ff81168114610158575f80fd5b809150509250925092565b634e487b7160e01b5f52601160045260245ffd5b5f8260030b8260030b028060030b915080821461019657610196610163565b5092915050565b60ff82811682821603908111156101b6576101b6610163565b92915050565b600181815b808511156101f657815f19048211156101dc576101dc610163565b808516156101e957918102915b93841c93908002906101c1565b509250929050565b5f8261020c575060016101b6565b8161021857505f6101b6565b816001811461022e576002811461023857610254565b60019150506101b6565b60ff84111561024957610249610163565b50506001821b6101b6565b5060208310610133831016604e8410600b8410161715610277575081810a6101b6565b61028183836101bc565b805f190482111561029457610294610163565b029392505050565b5f61010463ffffffff8416836101fe565b80820281158282048414176101b6576101b6610163565b5f826102de57634e487b7160e01b5f52601260045260245ffd5b50049056fea264697066735822122011b974178dea0f43921b5bcd0a3f0189838492edc977d91b13209c8d143d27f464736f6c63430008190033","sourceMap":"64:1161:70:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;64:1161:70;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x7300000000000000000000000000000000000000003014608060405260043610610034575f3560e01c8063b55522b214610038575b5f80fd5b61004b61004636600461010b565b61005d565b60405190815260200160405180910390f35b5f808460070b128061007157505f8360030b135b80610080575060fe198360030b125b15610089575f80fd5b5f610095845f19610177565b90508060ff168360ff16106100d8576100ae818461019d565b6100bc9060ff16600a61029c565b6100d09067ffffffffffffffff87166102ad565b915050610104565b6100e2838261019d565b6100f09060ff16600a61029c565b6100d09067ffffffffffffffff87166102c4565b9392505050565b5f805f6060848603121561011d575f80fd5b83358060070b811461012d575f80fd5b92506020840135600381900b8114610143575f80fd5b9150604084013560ff81168114610158575f80fd5b809150509250925092565b634e487b7160e01b5f52601160045260245ffd5b5f8260030b8260030b028060030b915080821461019657610196610163565b5092915050565b60ff82811682821603908111156101b6576101b6610163565b92915050565b600181815b808511156101f657815f19048211156101dc576101dc610163565b808516156101e957918102915b93841c93908002906101c1565b509250929050565b5f8261020c575060016101b6565b8161021857505f6101b6565b816001811461022e576002811461023857610254565b60019150506101b6565b60ff84111561024957610249610163565b50506001821b6101b6565b5060208310610133831016604e8410600b8410161715610277575081810a6101b6565b61028183836101bc565b805f190482111561029457610294610163565b029392505050565b5f61010463ffffffff8416836101fe565b80820281158282048414176101b6576101b6610163565b5f826102de57634e487b7160e01b5f52601260045260245ffd5b50049056fea264697066735822122011b974178dea0f43921b5bcd0a3f0189838492edc977d91b13209c8d143d27f464736f6c63430008190033","sourceMap":"64:1161:70:-:0;;;;;;;;;;;;;;;;;;;;;;;;632:591;;;;;;:::i;:::-;;:::i;:::-;;;780:25:113;;;768:2;753:18;632:591:70;;;;;;;;753:7;784:1;776:5;:9;;;:21;;;;796:1;789:4;:8;;;776:21;:36;;;;-1:-1:-1;;801:4:70;:11;;;776:36;772:75;;;828:8;;;772:75;857:19;892:9;897:4;-1:-1:-1;;892:9:70;:::i;:::-;857:46;;936:13;918:31;;:14;:31;;;914:303;;1039:30;1056:13;1039:14;:30;:::i;:::-;1026:44;;1032:38;;1026:2;:44;:::i;:::-;988:82;;:19;;;:82;:::i;:::-;965:105;;;;;914:303;1175:30;1191:14;1175:13;:30;:::i;:::-;1162:44;;1168:38;;1162:2;:44;:::i;:::-;1124:82;;:19;;;:82;:::i;632:591::-;;;;;;:::o;14:607:113:-;85:6;93;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;209:9;196:23;262:5;259:1;248:20;241:5;238:31;228:59;;283:1;280;273:12;228:59;306:5;-1:-1:-1;363:2:113;348:18;;335:32;409:1;398:22;;;386:35;;376:63;;435:1;432;425:12;376:63;458:7;-1:-1:-1;517:2:113;502:18;;489:32;565:4;552:18;;540:31;;530:59;;585:1;582;575:12;530:59;608:7;598:17;;;14:607;;;;;:::o;816:127::-;877:10;872:3;868:20;865:1;858:31;908:4;905:1;898:15;932:4;929:1;922:15;948:237;986:7;1063:1;1060;1049:16;1045:1;1042;1031:16;1027:39;1100:11;1097:1;1086:26;1075:37;;1143:11;1134:7;1131:24;1121:58;;1159:18;;:::i;:::-;1121:58;948:237;;;;:::o;1190:151::-;1280:4;1273:12;;;1259;;;1255:31;;1298:14;;1295:40;;;1315:18;;:::i;:::-;1190:151;;;;:::o;1346:416::-;1435:1;1472:5;1435:1;1486:270;1507:7;1497:8;1494:21;1486:270;;;1566:4;1562:1;1558:6;1554:17;1548:4;1545:27;1542:53;;;1575:18;;:::i;:::-;1625:7;1615:8;1611:22;1608:55;;;1645:16;;;;1608:55;1724:22;;;;1684:15;;;;1486:270;;;1490:3;1346:416;;;;;:::o;1767:806::-;1816:5;1846:8;1836:80;;-1:-1:-1;1887:1:113;1901:5;;1836:80;1935:4;1925:76;;-1:-1:-1;1972:1:113;1986:5;;1925:76;2017:4;2035:1;2030:59;;;;2103:1;2098:130;;;;2010:218;;2030:59;2060:1;2051:10;;2074:5;;;2098:130;2135:3;2125:8;2122:17;2119:43;;;2142:18;;:::i;:::-;-1:-1:-1;;2198:1:113;2184:16;;2213:5;;2010:218;;2312:2;2302:8;2299:16;2293:3;2287:4;2284:13;2280:36;2274:2;2264:8;2261:16;2256:2;2250:4;2247:12;2243:35;2240:77;2237:159;;;-1:-1:-1;2349:19:113;;;2381:5;;2237:159;2428:34;2453:8;2447:4;2428:34;:::i;:::-;2498:6;2494:1;2490:6;2486:19;2477:7;2474:32;2471:58;;;2509:18;;:::i;:::-;2547:20;;1767:806;-1:-1:-1;;;1767:806:113:o;2578:147::-;2637:5;2666:53;2707:10;2697:8;2693:25;2687:4;2666:53;:::i;2730:168::-;2803:9;;;2834;;2851:15;;;2845:22;;2831:37;2821:71;;2872:18;;:::i;2903:217::-;2943:1;2969;2959:132;;3013:10;3008:3;3004:20;3001:1;2994:31;3048:4;3045:1;3038:15;3076:4;3073:1;3066:15;2959:132;-1:-1:-1;3105:9:113;;2903:217::o","linkReferences":{}},"methodIdentifiers":{"convertToUint(int64,int32,uint8)":"b55522b2"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint8\",\"name\":\"targetDecimals\",\"type\":\"uint8\"}],\"name\":\"convertToUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"convertToUint(int64,int32,uint8)\":{\"details\":\"Function will lose precision if targetDecimals is less than the Pyth price decimals. This method will truncate any digits that cannot be represented by the targetDecimals. e.g. If the price is 0.000123 and the targetDecimals is 2, the result will be 0\",\"params\":{\"expo\":\"The Pyth price exponent\",\"price\":\"The Pyth price\",\"targetDecimals\":\"The target number of decimals\"},\"returns\":{\"_0\":\"The price as a uint256\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"convertToUint(int64,int32,uint8)\":{\"notice\":\"Converts a Pyth price to a uint256 with a target number of decimals\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@pythnetwork/pyth-sdk-solidity/PythUtils.sol\":\"PythUtils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/\",\":@pythnetwork/pyth-sdk-solidity/=node_modules/@pythnetwork/pyth-sdk-solidity/\",\":ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"node_modules/@pythnetwork/pyth-sdk-solidity/PythUtils.sol\":{\"keccak256\":\"0xd35ffc39f9214a6d1304c8f10153f414134ca40d183de1e983d33b1e73013920\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://757342e3bec675146ff780d6b56746adf190804a803493f1e86693508512068f\",\"dweb:/ipfs/QmPPv1TuGoWz29NC1DSZTjHM3ajnr8VhSMnqt61LccSDaW\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint8","name":"targetDecimals","type":"uint8"}],"stateMutability":"pure","type":"function","name":"convertToUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"convertToUint(int64,int32,uint8)":{"details":"Function will lose precision if targetDecimals is less than the Pyth price decimals. This method will truncate any digits that cannot be represented by the targetDecimals. e.g. If the price is 0.000123 and the targetDecimals is 2, the result will be 0","params":{"expo":"The Pyth price exponent","price":"The Pyth price","targetDecimals":"The target number of decimals"},"returns":{"_0":"The price as a uint256"}}},"version":1},"userdoc":{"kind":"user","methods":{"convertToUint(int64,int32,uint8)":{"notice":"Converts a Pyth price to a uint256 with a target number of decimals"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/","@pythnetwork/pyth-sdk-solidity/=node_modules/@pythnetwork/pyth-sdk-solidity/","ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/","openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/","solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@pythnetwork/pyth-sdk-solidity/PythUtils.sol":"PythUtils"},"evmVersion":"cancun","libraries":{}},"sources":{"node_modules/@pythnetwork/pyth-sdk-solidity/PythUtils.sol":{"keccak256":"0xd35ffc39f9214a6d1304c8f10153f414134ca40d183de1e983d33b1e73013920","urls":["bzz-raw://757342e3bec675146ff780d6b56746adf190804a803493f1e86693508512068f","dweb:/ipfs/QmPPv1TuGoWz29NC1DSZTjHM3ajnr8VhSMnqt61LccSDaW"],"license":"Apache-2.0"}},"version":1},"id":70}